name: Generate Falco Artifacts

on:
  push:

env:
  OCI_REGISTRY: ghcr.io

jobs:
  build-image:
    name: Build OCI Image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        include:
          - rule_file: config/rules/never-chmod-777.yaml
            name: never-chmod-777
            version: v1.0.0
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0

      - name: Log into registry ${{ env.OCI_REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ${{ env.OCI_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout Falcoctl Repo
        uses: actions/checkout@v3
        with:
          repository: falcosecurity/falcoctl
          ref: main
          path: tools/falcoctl

      - name: Setup Golang
        uses: actions/setup-go@v4
        with:
          go-version: '^1.20'
          cache-dependency-path: tools/falcoctl/go.sum  

      - name: Build falcoctl
        run: make
        working-directory: tools/falcoctl

      - name: Checkout Rules Repo
        uses: actions/checkout@v3
        with:
          path: config/rules

      - name: set repository name to lowercase
        run: |
          echo "reponame=${reponame,,}" >>${GITHUB_ENV}
        env:
          reponame: '${{ github.repository }}'

      - name: Upload OCI artifacts to GitHub packages
        run: |
          tools/falcoctl/falcoctl registry push \
          --config /dev/null \
          --type rulesfile \
          --version ${{ matrix.version }} \
          ${OCI_REGISTRY}/${{ env.reponame }}/${{ matrix.name }}:${{ matrix.version }} ${{ matrix.rule_file }}